[{"D:\\work\\allData\\ccc_assg2\\frontend\\src\\index.js":"1","D:\\work\\allData\\ccc_assg2\\frontend\\src\\App.js":"2","D:\\work\\allData\\ccc_assg2\\frontend\\src\\reportWebVitals.js":"3","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario1.js":"4","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Nav.js":"5","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario4.js":"6","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario3.js":"7","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario2.js":"8","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Home.js":"9","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart3.js":"10","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart1.js":"11","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart2.js":"12","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalIncome.js":"13","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalUnemployment.js":"14","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalSupport.js":"15","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\progress-bar.component.js":"16","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalRealTimeData.js":"17","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\colors.js":"18"},{"size":517,"mtime":1621870156760,"results":"19","hashOfConfig":"20"},{"size":1284,"mtime":1621870156742,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1621870156767,"results":"22","hashOfConfig":"20"},{"size":3741,"mtime":1621918881363,"results":"23","hashOfConfig":"20"},{"size":1093,"mtime":1621934556476,"results":"24","hashOfConfig":"20"},{"size":3544,"mtime":1621879624529,"results":"25","hashOfConfig":"20"},{"size":3538,"mtime":1621870156757,"results":"26","hashOfConfig":"20"},{"size":3548,"mtime":1621871190257,"results":"27","hashOfConfig":"20"},{"size":1211,"mtime":1621905764992,"results":"28","hashOfConfig":"20"},{"size":1162,"mtime":1621870156743,"results":"29","hashOfConfig":"20"},{"size":2181,"mtime":1621870156742,"results":"30","hashOfConfig":"20"},{"size":1162,"mtime":1621870156743,"results":"31","hashOfConfig":"20"},{"size":7191,"mtime":1621939031995,"results":"32","hashOfConfig":"20"},{"size":7036,"mtime":1621939185009,"results":"33","hashOfConfig":"20"},{"size":11435,"mtime":1621939373864,"results":"34","hashOfConfig":"20"},{"size":792,"mtime":1621870156758,"results":"35","hashOfConfig":"20"},{"size":5915,"mtime":1621939470120,"results":"36","hashOfConfig":"20"},{"size":837,"mtime":1621938101459,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"bd02e4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\allData\\ccc_assg2\\frontend\\src\\index.js",[],["81","82"],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\App.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\reportWebVitals.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario1.js",["83","84","85","86"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as Cities from '../data/cities.json'\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from './Modal/ModalIncome';\r\n\r\nfunction Scenario1() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: -25.9958,\r\n    longitude: 135.1745,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zoom: 3.5\r\n  });\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [show,setShow] = useState(false)\r\n  const [city,setCity] = useState(null)\r\n  const [apiData,setApiData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const getApiData = async (cityName) => {\r\n    const response = await fetch('/api/income?city='+cityName);\r\n    const jsonData = await response.json();\r\n    setApiData(jsonData);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCity(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    fetchItems();\r\n    }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n      const data = await fetch('/scenario1');\r\n      // if (!data.ok) {\r\n      //   const message = `An error has occured: ${data.status}`;\r\n      //   throw new Error(message);\r\n      // }\r\n      const items = await data.json();\r\n      setItems(items);\r\n  };\r\n\r\n  const closeModalHadler = () => setShow(false);\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      {/* { show ? <div onClick={closeModalHadler} className=\"modal-drop\"></div> : null} */}\r\n      {/* <button onClick={() => setShow(true)} className=\"btn-openModal\">Open Modal</button> */}\r\n      <Modal show={show} city={city} apidata={apiData} close={closeModalHadler}/>\r\n      <div>\r\n          {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken='pk.eyJ1Ijoia3dhbHV5byIsImEiOiJja28zejVrZjMwMmVoMnFxd3kwaDlzM2RmIn0.CpCst2zLMvWrjhmTwaWCCg'\r\n        mapStyle=\"mapbox://styles/kwaluyo/cko474hnl0w3v18qqg8o0mwhe\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {Cities.cities.map(city => (\r\n          <Marker onClick={() => setShow(true)}\r\n            key = {city.ID}\r\n            latitude = {city.coordinate.lat}\r\n            longitude = {city.coordinate.lng}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                console.log(city.name)\r\n                setSelectedCity(city);\r\n                setCity(city.name);\r\n                getApiData(city.name);\r\n                e.preventDefault();\r\n              }}\r\n            \r\n            >\r\n              <img src=\"/mapbox-marker-icon-20px-gray.png\" alt=\"City Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* erased selectedCity */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenario1;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Nav.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario4.js",["87","88","89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as Cities from '../data/cities.json'\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from './Modal/ModalRealTimeData';\r\n\r\nfunction Scenario4() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: -25.9958,\r\n    longitude: 135.1745,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zoom: 3.5\r\n  });\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [show,setShow] = useState(false)\r\n  const [city,setCity] = useState(null)\r\n  const [apiData,setApiData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const getApiData = async (cityName) => {\r\n    const response = await fetch('/api/realtime?city='+cityName);\r\n    const jsonData = await response.json();\r\n    console.log(jsonData);\r\n    setApiData(jsonData);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCity(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    fetchItems();\r\n    }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n      const data = await fetch('/scenario1');\r\n      // if (!data.ok) {\r\n      //   const message = `An error has occured: ${data.status}`;\r\n      //   throw new Error(message);\r\n      // }\r\n      const items = await data.json();\r\n      setItems(items);\r\n  };\r\n\r\n  const closeModalHadler = () => setShow(false);\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <Modal show={show} city={city} apidata={apiData} close={closeModalHadler}/>\r\n      <div>\r\n          {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken='pk.eyJ1Ijoia3dhbHV5byIsImEiOiJja28zejVrZjMwMmVoMnFxd3kwaDlzM2RmIn0.CpCst2zLMvWrjhmTwaWCCg'\r\n        mapStyle=\"mapbox://styles/kwaluyo/cko474hnl0w3v18qqg8o0mwhe\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {Cities.cities.map(city => (\r\n          <Marker onClick={() => setShow(true)}\r\n            key = {city.ID}\r\n            latitude = {city.coordinate.lat}\r\n            longitude = {city.coordinate.lng}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                setSelectedCity(city);\r\n                setCity(city.name);\r\n                getApiData(city.name);\r\n                e.preventDefault();\r\n              }}\r\n            \r\n            >\r\n              <img src=\"/mapbox-marker-icon-20px-gray.png\" alt=\"City Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* erased selectedCity */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenario4;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario3.js",["91","92","93","94"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as Cities from '../data/cities.json'\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from './Modal/ModalSupport';\r\n\r\nfunction Scenario3() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: -25.9958,\r\n    longitude: 135.1745,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zoom: 3.5\r\n  });\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [show,setShow] = useState(false)\r\n  const [city,setCity] = useState(null)\r\n  const [apiData,setApiData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const getApiData = async (cityName) => {\r\n    const response = await fetch('/api/support?city='+cityName);\r\n    const jsonData = await response.json();\r\n    console.log(jsonData);\r\n    setApiData(jsonData);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCity(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    fetchItems();\r\n    }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n      const data = await fetch('/scenario1');\r\n      // if (!data.ok) {\r\n      //   const message = `An error has occured: ${data.status}`;\r\n      //   throw new Error(message);\r\n      // }\r\n      const items = await data.json();\r\n      setItems(items);\r\n  };\r\n\r\n  const closeModalHadler = () => setShow(false);\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <Modal show={show} city={city} apidata={apiData} close={closeModalHadler}/>\r\n      <div>\r\n          {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken='pk.eyJ1Ijoia3dhbHV5byIsImEiOiJja28zejVrZjMwMmVoMnFxd3kwaDlzM2RmIn0.CpCst2zLMvWrjhmTwaWCCg'\r\n        mapStyle=\"mapbox://styles/kwaluyo/cko474hnl0w3v18qqg8o0mwhe\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {Cities.cities.map(city => (\r\n          <Marker onClick={() => setShow(true)}\r\n            key = {city.ID}\r\n            latitude = {city.coordinate.lat}\r\n            longitude = {city.coordinate.lng}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                setSelectedCity(city);\r\n                setCity(city.name);\r\n                getApiData(city.name);\r\n                e.preventDefault();\r\n              }}\r\n            \r\n            >\r\n              <img src=\"/mapbox-marker-icon-20px-gray.png\" alt=\"City Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* erased selectedCity */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenario3;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario2.js",["95","96","97","98"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as Cities from '../data/cities.json'\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from './Modal/ModalUnemployment';\r\n\r\nfunction Scenario2() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: -25.9958,\r\n    longitude: 135.1745,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zoom: 3.5\r\n  });\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [show,setShow] = useState(false)\r\n  const [city,setCity] = useState(null)\r\n  const [apiData,setApiData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const getApiData = async (cityName) => {\r\n    const response = await fetch('/api/unemployment?city='+cityName);\r\n    const jsonData = await response.json();\r\n    console.log(jsonData);\r\n    setApiData(jsonData);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCity(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    fetchItems();\r\n    }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n      const data = await fetch('/scenario1');\r\n      // if (!data.ok) {\r\n      //   const message = `An error has occured: ${data.status}`;\r\n      //   throw new Error(message);\r\n      // }\r\n      const items = await data.json();\r\n      setItems(items);\r\n  };\r\n\r\n  const closeModalHadler = () => setShow(false);\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <Modal show={show} city={city} apidata={apiData} close={closeModalHadler}/>\r\n      <div>\r\n          {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken='pk.eyJ1Ijoia3dhbHV5byIsImEiOiJja28zejVrZjMwMmVoMnFxd3kwaDlzM2RmIn0.CpCst2zLMvWrjhmTwaWCCg'\r\n        mapStyle=\"mapbox://styles/kwaluyo/cko474hnl0w3v18qqg8o0mwhe\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {Cities.cities.map(city => (\r\n          <Marker onClick={() => setShow(true)}\r\n            key = {city.ID}\r\n            latitude = {city.coordinate.lat}\r\n            longitude = {city.coordinate.lng}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                setSelectedCity(city);\r\n                setCity(city.name);\r\n                getApiData(city.name);\r\n                e.preventDefault();\r\n              }}\r\n            \r\n            >\r\n              <img src=\"/mapbox-marker-icon-20px-gray.png\" alt=\"City Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* erased selectedCity */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenario2;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Home.js",["99","100"],"import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport \"../App.css\"\r\n\r\nfunction Home(){\r\n\r\n    return(\r\n        <div className=\"content\">\r\n            <div className=\"content1\"> Find the happiest city</div>\r\n            <div className=\"subcontent\">\r\n                <div className=\"content2\"> \r\n                <h4>Group 17</h4>\r\n                    <h6>Jeanelle Abanto: 1133815</h6>\r\n                    <h6>Kartika Waluyo: 1000555</h6>\r\n                    <h6>Radhimas Djan: 1146240</h6>\r\n                    <h6>Zi Jin: 987771</h6>                    \r\n                </div>\r\n                <div className=\"content3\"> The project is to explore the happiness of 4 cities in australia, based on their sentiment we will compare them with the aurin data that can be correlated we will use a 2014~2018 data for comparing with the aurin while we will be using a harvester to get a 2021 data and analyze their sentiment</div>                {/* <div className=\"content4\"> content4 </div>\r\n                {/* <div className=\"content4\"> content4 </div>\r\n                <div className=\"content5\"> content5 </div> */}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart3.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart1.js",["101","102","103"],"import React, { PureComponent, useEffect, useState} from 'react';\r\n// import {Link} from 'react-router-dom';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport * as Income from '../data/sentiment-income.json'\r\nimport \"../App.css\"\r\n\r\nconst data = Income.cities\r\n\r\n\r\nfunction Chart1() {\r\n    useEffect( () => {\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const fetchItems = async () => {\r\n        const data = await fetch('/chart1');\r\n        const items = await data.json();\r\n        setItems(items);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n            </div>\r\n\r\n            <div className=\"barchart\"> \r\n            <BarChart\r\n                width={1000}\r\n                height={500}\r\n                data={data}\r\n                margin={{\r\n                    top: 5,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5\r\n                }}\r\n                >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis xAxisId=\"0\" dataKey=\"year\" />\r\n                <XAxis xAxisId=\"1\" dataKey=\"name\" allowDuplicatedCategory={false} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"income\" fill=\"#594422\" />\r\n                <Bar dataKey=\"sentiment\" fill=\"#B18743\" />\r\n            </BarChart>\r\n            </div>   \r\n        </div>\r\n        \r\n      );\r\n}\r\n\r\n\r\n\r\nexport default Chart1;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart2.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalIncome.js",["104","105","106","107","108"],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalUnemployment.js",["109","110","111","112"],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalSupport.js",["113","114","115","116"],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\progress-bar.component.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalRealTimeData.js",["117","118","119","120"],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\colors.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":30,"nodeType":"127","messageId":"128","endLine":2,"endColumn":35},{"ruleId":"125","severity":1,"message":"129","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"125","severity":1,"message":"131","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":2,"column":30,"nodeType":"127","messageId":"128","endLine":2,"endColumn":35},{"ruleId":"125","severity":1,"message":"129","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"125","severity":1,"message":"131","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":2,"column":30,"nodeType":"127","messageId":"128","endLine":2,"endColumn":35},{"ruleId":"125","severity":1,"message":"129","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"125","severity":1,"message":"131","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":2,"column":30,"nodeType":"127","messageId":"128","endLine":2,"endColumn":35},{"ruleId":"125","severity":1,"message":"129","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"125","severity":1,"message":"131","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":22},{"ruleId":"125","severity":1,"message":"132","line":2,"column":9,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"133","line":2,"column":20,"nodeType":"127","messageId":"128","endLine":2,"endColumn":28},{"ruleId":"125","severity":1,"message":"134","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":30},{"ruleId":"125","severity":1,"message":"135","line":3,"column":25,"nodeType":"127","messageId":"128","endLine":3,"endColumn":29},{"ruleId":"125","severity":1,"message":"136","line":3,"column":77,"nodeType":"127","messageId":"128","endLine":3,"endColumn":96},{"ruleId":"125","severity":1,"message":"133","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"132","line":1,"column":25,"nodeType":"127","messageId":"128","endLine":1,"endColumn":34},{"ruleId":"125","severity":1,"message":"137","line":5,"column":15,"nodeType":"127","messageId":"128","endLine":5,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":25,"column":49,"nodeType":"140","messageId":"141","endLine":25,"endColumn":51},{"ruleId":"125","severity":1,"message":"142","line":34,"column":53,"nodeType":"127","messageId":"128","endLine":34,"endColumn":66},{"ruleId":"125","severity":1,"message":"133","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"132","line":1,"column":25,"nodeType":"127","messageId":"128","endLine":1,"endColumn":34},{"ruleId":"138","severity":1,"message":"139","line":22,"column":49,"nodeType":"140","messageId":"141","endLine":22,"endColumn":51},{"ruleId":"125","severity":1,"message":"142","line":30,"column":53,"nodeType":"127","messageId":"128","endLine":30,"endColumn":66},{"ruleId":"125","severity":1,"message":"133","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"132","line":1,"column":25,"nodeType":"127","messageId":"128","endLine":1,"endColumn":34},{"ruleId":"138","severity":1,"message":"139","line":23,"column":49,"nodeType":"140","messageId":"141","endLine":23,"endColumn":51},{"ruleId":"125","severity":1,"message":"142","line":31,"column":53,"nodeType":"127","messageId":"128","endLine":31,"endColumn":66},{"ruleId":"125","severity":1,"message":"133","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"132","line":1,"column":25,"nodeType":"127","messageId":"128","endLine":1,"endColumn":34},{"ruleId":"138","severity":1,"message":"139","line":21,"column":49,"nodeType":"140","messageId":"141","endLine":21,"endColumn":51},{"ruleId":"125","severity":1,"message":"142","line":27,"column":49,"nodeType":"127","messageId":"128","endLine":27,"endColumn":62},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","'mapboxgl' is defined but never used.","'Link' is defined but never used.","'selectedCity' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'PureComponent' is defined but never used.","'Cell' is defined but never used.","'ResponsiveContainer' is defined but never used.","'defaults' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'chartInstance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]