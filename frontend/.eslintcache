[{"D:\\work\\allData\\ccc_assg2\\frontend\\src\\index.js":"1","D:\\work\\allData\\ccc_assg2\\frontend\\src\\App.js":"2","D:\\work\\allData\\ccc_assg2\\frontend\\src\\reportWebVitals.js":"3","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario1.js":"4","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Nav.js":"5","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario4.js":"6","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario3.js":"7","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario2.js":"8","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Home.js":"9","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart3.js":"10","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart1.js":"11","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart2.js":"12","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalIncome.js":"13","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalUnemployment.js":"14","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalSupport.js":"15","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\progress-bar.component.js":"16","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalRealTimeData.js":"17"},{"size":517,"mtime":1621870156760,"results":"18","hashOfConfig":"19"},{"size":1284,"mtime":1621870156742,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1621870156767,"results":"21","hashOfConfig":"19"},{"size":3741,"mtime":1621918881363,"results":"22","hashOfConfig":"19"},{"size":1087,"mtime":1621870156756,"results":"23","hashOfConfig":"19"},{"size":3544,"mtime":1621879624529,"results":"24","hashOfConfig":"19"},{"size":3538,"mtime":1621870156757,"results":"25","hashOfConfig":"19"},{"size":3548,"mtime":1621871190257,"results":"26","hashOfConfig":"19"},{"size":1211,"mtime":1621905764992,"results":"27","hashOfConfig":"19"},{"size":1162,"mtime":1621870156743,"results":"28","hashOfConfig":"19"},{"size":2181,"mtime":1621870156742,"results":"29","hashOfConfig":"19"},{"size":1162,"mtime":1621870156743,"results":"30","hashOfConfig":"19"},{"size":4598,"mtime":1621870156744,"results":"31","hashOfConfig":"19"},{"size":4577,"mtime":1621870156756,"results":"32","hashOfConfig":"19"},{"size":8974,"mtime":1621870156756,"results":"33","hashOfConfig":"19"},{"size":792,"mtime":1621870156758,"results":"34","hashOfConfig":"19"},{"size":3449,"mtime":1621919246730,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bd02e4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\work\\allData\\ccc_assg2\\frontend\\src\\index.js",[],["79","80"],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\App.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\reportWebVitals.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario1.js",["81","82","83","84"],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Nav.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario4.js",["85","86","87","88"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as Cities from '../data/cities.json'\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from './Modal/ModalRealTimeData';\r\n\r\nfunction Scenario4() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: -25.9958,\r\n    longitude: 135.1745,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zoom: 3.5\r\n  });\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [show,setShow] = useState(false)\r\n  const [city,setCity] = useState(null)\r\n  const [apiData,setApiData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const getApiData = async (cityName) => {\r\n    const response = await fetch('/api/realtime?city='+cityName);\r\n    const jsonData = await response.json();\r\n    console.log(jsonData);\r\n    setApiData(jsonData);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCity(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    fetchItems();\r\n    }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n      const data = await fetch('/scenario1');\r\n      // if (!data.ok) {\r\n      //   const message = `An error has occured: ${data.status}`;\r\n      //   throw new Error(message);\r\n      // }\r\n      const items = await data.json();\r\n      setItems(items);\r\n  };\r\n\r\n  const closeModalHadler = () => setShow(false);\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <Modal show={show} city={city} apidata={apiData} close={closeModalHadler}/>\r\n      <div>\r\n          {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken='pk.eyJ1Ijoia3dhbHV5byIsImEiOiJja28zejVrZjMwMmVoMnFxd3kwaDlzM2RmIn0.CpCst2zLMvWrjhmTwaWCCg'\r\n        mapStyle=\"mapbox://styles/kwaluyo/cko474hnl0w3v18qqg8o0mwhe\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {Cities.cities.map(city => (\r\n          <Marker onClick={() => setShow(true)}\r\n            key = {city.ID}\r\n            latitude = {city.coordinate.lat}\r\n            longitude = {city.coordinate.lng}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                setSelectedCity(city);\r\n                setCity(city.name);\r\n                getApiData(city.name);\r\n                e.preventDefault();\r\n              }}\r\n            \r\n            >\r\n              <img src=\"/mapbox-marker-icon-20px-gray.png\" alt=\"City Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* erased selectedCity */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenario4;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario3.js",["89","90","91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as Cities from '../data/cities.json'\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from './Modal/ModalSupport';\r\n\r\nfunction Scenario3() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: -25.9958,\r\n    longitude: 135.1745,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zoom: 3.5\r\n  });\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [show,setShow] = useState(false)\r\n  const [city,setCity] = useState(null)\r\n  const [apiData,setApiData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const getApiData = async (cityName) => {\r\n    const response = await fetch('/api/support?city='+cityName);\r\n    const jsonData = await response.json();\r\n    console.log(jsonData);\r\n    setApiData(jsonData);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCity(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    fetchItems();\r\n    }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n      const data = await fetch('/scenario1');\r\n      // if (!data.ok) {\r\n      //   const message = `An error has occured: ${data.status}`;\r\n      //   throw new Error(message);\r\n      // }\r\n      const items = await data.json();\r\n      setItems(items);\r\n  };\r\n\r\n  const closeModalHadler = () => setShow(false);\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <Modal show={show} city={city} apidata={apiData} close={closeModalHadler}/>\r\n      <div>\r\n          {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken='pk.eyJ1Ijoia3dhbHV5byIsImEiOiJja28zejVrZjMwMmVoMnFxd3kwaDlzM2RmIn0.CpCst2zLMvWrjhmTwaWCCg'\r\n        mapStyle=\"mapbox://styles/kwaluyo/cko474hnl0w3v18qqg8o0mwhe\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {Cities.cities.map(city => (\r\n          <Marker onClick={() => setShow(true)}\r\n            key = {city.ID}\r\n            latitude = {city.coordinate.lat}\r\n            longitude = {city.coordinate.lng}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                setSelectedCity(city);\r\n                setCity(city.name);\r\n                getApiData(city.name);\r\n                e.preventDefault();\r\n              }}\r\n            \r\n            >\r\n              <img src=\"/mapbox-marker-icon-20px-gray.png\" alt=\"City Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* erased selectedCity */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenario3;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Scenario2.js",["93","94","95","96"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport * as Cities from '../data/cities.json'\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from './Modal/ModalUnemployment';\r\n\r\nfunction Scenario2() {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: -25.9958,\r\n    longitude: 135.1745,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zoom: 3.5\r\n  });\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [show,setShow] = useState(false)\r\n  const [city,setCity] = useState(null)\r\n  const [apiData,setApiData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const getApiData = async (cityName) => {\r\n    const response = await fetch('/api/unemployment?city='+cityName);\r\n    const jsonData = await response.json();\r\n    console.log(jsonData);\r\n    setApiData(jsonData);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCity(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    fetchItems();\r\n    }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n      const data = await fetch('/scenario1');\r\n      // if (!data.ok) {\r\n      //   const message = `An error has occured: ${data.status}`;\r\n      //   throw new Error(message);\r\n      // }\r\n      const items = await data.json();\r\n      setItems(items);\r\n  };\r\n\r\n  const closeModalHadler = () => setShow(false);\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <Modal show={show} city={city} apidata={apiData} close={closeModalHadler}/>\r\n      <div>\r\n          {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken='pk.eyJ1Ijoia3dhbHV5byIsImEiOiJja28zejVrZjMwMmVoMnFxd3kwaDlzM2RmIn0.CpCst2zLMvWrjhmTwaWCCg'\r\n        mapStyle=\"mapbox://styles/kwaluyo/cko474hnl0w3v18qqg8o0mwhe\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {Cities.cities.map(city => (\r\n          <Marker onClick={() => setShow(true)}\r\n            key = {city.ID}\r\n            latitude = {city.coordinate.lat}\r\n            longitude = {city.coordinate.lng}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                setSelectedCity(city);\r\n                setCity(city.name);\r\n                getApiData(city.name);\r\n                e.preventDefault();\r\n              }}\r\n            \r\n            >\r\n              <img src=\"/mapbox-marker-icon-20px-gray.png\" alt=\"City Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* erased selectedCity */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenario2;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Home.js",["97","98"],"import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport \"../App.css\"\r\n\r\nfunction Home(){\r\n\r\n    return(\r\n        <div className=\"content\">\r\n            <div className=\"content1\"> Find the happiest city</div>\r\n            <div className=\"subcontent\">\r\n                <div className=\"content2\"> \r\n                <h4>Group 17</h4>\r\n                    <h6>Jeanelle Abanto: 1133815</h6>\r\n                    <h6>Kartika Waluyo: 1000555</h6>\r\n                    <h6>Radhimas Djan: 1146240</h6>\r\n                    <h6>Zi Jin: 987771</h6>                    \r\n                </div>\r\n                <div className=\"content3\"> The project is to explore the happiness of 4 cities in australia, based on their sentiment we will compare them with the aurin data that can be correlated we will use a 2014~2018 data for comparing with the aurin while we will be using a harvester to get a 2021 data and analyze their sentiment</div>                {/* <div className=\"content4\"> content4 </div>\r\n                {/* <div className=\"content4\"> content4 </div>\r\n                <div className=\"content5\"> content5 </div> */}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart3.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart1.js",["99","100","101"],"import React, { PureComponent, useEffect, useState} from 'react';\r\n// import {Link} from 'react-router-dom';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport * as Income from '../data/sentiment-income.json'\r\nimport \"../App.css\"\r\n\r\nconst data = Income.cities\r\n\r\n\r\nfunction Chart1() {\r\n    useEffect( () => {\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const fetchItems = async () => {\r\n        const data = await fetch('/chart1');\r\n        const items = await data.json();\r\n        setItems(items);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            {\r\n            items.map(item => (\r\n                <div class=\"container-fluid p-3 w-50\">\r\n                    <div class=\"card-deck\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body p-1\">\r\n                                <h6 class=\"card-title\">{item.name}</h6>\r\n                                <p class=\"card-text\">{item.msg}</p>\r\n                                <p class=\"card-text\"><i>{item.username}</i></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n            </div>\r\n\r\n            <div className=\"barchart\"> \r\n            <BarChart\r\n                width={1000}\r\n                height={500}\r\n                data={data}\r\n                margin={{\r\n                    top: 5,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5\r\n                }}\r\n                >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis xAxisId=\"0\" dataKey=\"year\" />\r\n                <XAxis xAxisId=\"1\" dataKey=\"name\" allowDuplicatedCategory={false} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"income\" fill=\"#594422\" />\r\n                <Bar dataKey=\"sentiment\" fill=\"#B18743\" />\r\n            </BarChart>\r\n            </div>   \r\n        </div>\r\n        \r\n      );\r\n}\r\n\r\n\r\n\r\nexport default Chart1;","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Chart2.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalIncome.js",["102","103","104"],"import React, {useState,useEffect} from \"react\";\r\nimport './Modal.css';\r\nimport ProgressBar from \"../progress-bar.component\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n// export default Modal;\r\nexport const Modal = ({ show, city, apidata,close }) => {\r\n    return  (\r\n        <div className=\"modal-wrapper\"\r\n            style={{\r\n                display: show ? 'block':'none'\r\n            }}>\r\n            {/* <div className=\"modal-header\">\r\n                <p>{city}</p>\r\n                <span onClick={close} class=\"close-modal-btn\">x</span>\r\n            </div> */}\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-body\">\r\n                    <h4><u>{city}</u></h4>\r\n                    {\r\n                        show ? \r\n                        apidata.map((data, key) => {\r\n                            console.log(data);\r\n                            if (data.docs) {\r\n                                return (\r\n                                    <div className=\"grid-container\">\r\n                                    {\r\n                                        data.docs.map((detail, keyDetail) => {\r\n                                            if(detail.years) {\r\n                                                return(\r\n                                                    <div className=\"grid-item\">\r\n                                                        <div className=\"label\">Year : {detail.year}</div>\r\n                                                        <div className=\"label\">Average : {detail.mean}</div>\r\n                                                        <div><ProgressBar key={keyDetail} bgcolor=\"#6a1b9a\" completed={Number((detail.mean/100000)*100).toFixed(2)} /></div>\r\n                                                        <div className=\"pie_block\">\r\n                                                        <PieChart data={[\r\n                                                                    {'title': 'Compound','value': detail.years.sentiment.compound,'color': '#E38627'},\r\n                                                                    {'title': 'Negative','value': detail.years.sentiment.negative,'color': '#C13C37'},\r\n                                                                    {'title': 'Neutral','value': detail.years.sentiment.neutral,'color': '#6A2135'},\r\n                                                                    {'title': 'Positive','value': detail.years.sentiment.positive,'color': '#3A2135'}]}\r\n                                                                    label={(data) => data.dataEntry.value.toFixed(2)}\r\n                                                                    labelPosition={65}\r\n                                                                    labelStyle={{\r\n                                                                    fontSize: \"10px\",\r\n                                                                    fontColor: \"FFFFFA\",\r\n                                                                    fontWeight: \"500\",\r\n                                                                    }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            } else {\r\n                                                return(\r\n                                                    <div className=\"grid-item\">\r\n                                                        <div className=\"label\">Year : {detail.year}</div>\r\n                                                        <div className=\"label\">Average : {detail.mean}</div>\r\n                                                        <div><ProgressBar key={keyDetail} bgcolor=\"#6a1b9a\" completed={Number((detail.mean/100000)*100).toFixed(2)} /></div>\r\n                                                    </div>\r\n                                                );\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        }): ''  \r\n                    }\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={close} className=\"btn-cancel\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalUnemployment.js",["105","106","107"],"import React, {useState,useEffect} from \"react\";\r\nimport './Modal.css';\r\nimport ProgressBar from \"../progress-bar.component\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n// export default Modal;\r\nexport const Modal = ({ show, city, apidata,close }) => {\r\n    return  (\r\n        <div className=\"modal-wrapper\"\r\n            style={{\r\n                display: show ? 'block':'none'\r\n            }}>\r\n            {/* <div className=\"modal-header\">\r\n                <p>{city}</p>\r\n                <span onClick={close} class=\"close-modal-btn\">x</span>\r\n            </div> */}\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-body\">\r\n                    <h4><u>{city}</u></h4>\r\n                    {\r\n                        show ? \r\n                        apidata.map((data, key) => {\r\n                            console.log(data);\r\n                            if (data.docs) {\r\n                                return (\r\n                                    <div className=\"grid-container\">\r\n                                    {\r\n                                        data.docs.map((detail, keyDetail) => {\r\n                                            if(detail.years) {\r\n                                                return(\r\n                                                    <div className=\"grid-item\">\r\n                                                        <div className=\"label\">Year : {detail.year}</div>\r\n                                                        <div className=\"label\">Average : {detail.rate}</div>\r\n                                                        <div><ProgressBar key={keyDetail} bgcolor=\"#6a1b9a\" completed={detail.rate.toFixed(2)} /></div>\r\n                                                        <div className=\"pie_block\">\r\n                                                        <PieChart data={[\r\n                                                                    {'title': 'Compound','value': detail.years.sentiment.compound,'color': '#E38627'},\r\n                                                                    {'title': 'Negative','value': detail.years.sentiment.negative,'color': '#C13C37'},\r\n                                                                    {'title': 'Neutral','value': detail.years.sentiment.neutral,'color': '#6A2135'},\r\n                                                                    {'title': 'Positive','value': detail.years.sentiment.positive,'color': '#3A2135'}]}\r\n                                                                    label={(data) => data.dataEntry.value.toFixed(2)}\r\n                                                                    labelPosition={65}\r\n                                                                    labelStyle={{\r\n                                                                    fontSize: \"10px\",\r\n                                                                    fontColor: \"FFFFFA\",\r\n                                                                    fontWeight: \"500\",\r\n                                                                    }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            } else {\r\n                                                return(\r\n                                                    <div className=\"grid-item\">\r\n                                                        <div className=\"label\">Year : {detail.year}</div>\r\n                                                        <div className=\"label\">Average : {detail.rate}</div>\r\n                                                        <div><ProgressBar key={keyDetail} bgcolor=\"#6a1b9a\" completed={Number((detail.rate/100000)*100).toFixed(2)} /></div>\r\n                                                    </div>\r\n                                                );\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        }): ''  \r\n                    }\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={close} className=\"btn-cancel\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalSupport.js",["108","109","110"],"import React, {useState,useEffect} from \"react\";\r\nimport './Modal.css';\r\nimport ProgressBar from \"../progress-bar.component\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n// export default Modal;\r\nexport const Modal = ({ show, city, apidata,close }) => {\r\n    return  (\r\n        <div className=\"modal-wrapper-support\"\r\n            style={{\r\n                display: show ? 'block':'none'\r\n            }}>\r\n            {/* <div className=\"modal-header\">\r\n                <p>{city}</p>\r\n                <span onClick={close} class=\"close-modal-btn\">x</span>\r\n            </div> */}\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-body\">\r\n                    <h4><u>{city}</u></h4>\r\n                    {\r\n                        show ? \r\n                        apidata.map((data, key) => {\r\n                            console.log(data);\r\n                            if (data.docs) {\r\n                                return (\r\n                                    <div className=\"grid-container-support\">\r\n                                    {\r\n                                        data.docs.map((detail, keyDetail) => {\r\n                                            if(detail.years) {\r\n                                                return(\r\n                                                    <div className=\"grid-item\">\r\n                                                        <div className=\"\">Year : {detail.year}</div>\r\n                                                        <div className=\"grid-item-1\">\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Pension</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.age_pension_pc).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Senior Card</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.senior_card).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Disable</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.disable).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Sole Fam</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.sole_fam).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Unemployment</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.unemployment).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"grid-item-2\">\r\n                                                            <PieChart data={[\r\n                                                                    {'title': 'Compound','value': detail.years.sentiment.compound,'color': '#E38627'},\r\n                                                                    {'title': 'Negative','value': detail.years.sentiment.negative,'color': '#C13C37'},\r\n                                                                    {'title': 'Neutral','value': detail.years.sentiment.neutral,'color': '#6A2135'},\r\n                                                                    {'title': 'Positive','value': detail.years.sentiment.positive,'color': '#3A2135'}]}\r\n                                                                    label={(data) => data.dataEntry.value.toFixed(2)}\r\n                                                                    labelPosition={65}\r\n                                                                    labelStyle={{\r\n                                                                    fontSize: \"10px\",\r\n                                                                    fontColor: \"FFFFFA\",\r\n                                                                    fontWeight: \"500\",\r\n                                                                    }}\r\n                                                            />\r\n                                                        </div>\r\n                                                        \r\n                                                        \r\n                                                    </div>\r\n                                                );\r\n                                            } else {\r\n                                                return(\r\n                                                    <div className=\"grid-item\">\r\n                                                        <div className=\"\">Year : {detail.year}</div>\r\n                                                        <div className=\"grid-item-1\">\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Pension</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.age_pension_pc).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Senior Card</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.senior_card).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Disable</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.disable).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Sole Fam</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.sole_fam).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                            <div className=\"data_block\">\r\n                                                                <div className=\"label\">Unemployment</div>\r\n                                                                <div className=\"progbar\"><ProgressBar key={key} bgcolor=\"#6a1b9a\" completed={Number(detail.unemployment).toFixed(2)} /></div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        }): ''  \r\n                    }\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={close} className=\"btn-cancel\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\progress-bar.component.js",[],"D:\\work\\allData\\ccc_assg2\\frontend\\src\\components\\Modal\\ModalRealTimeData.js",["111","112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":30,"nodeType":"121","messageId":"122","endLine":2,"endColumn":35},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"124","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":14},{"ruleId":"119","severity":1,"message":"125","line":16,"column":10,"nodeType":"121","messageId":"122","endLine":16,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":2,"column":30,"nodeType":"121","messageId":"122","endLine":2,"endColumn":35},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"124","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":14},{"ruleId":"119","severity":1,"message":"125","line":16,"column":10,"nodeType":"121","messageId":"122","endLine":16,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":2,"column":30,"nodeType":"121","messageId":"122","endLine":2,"endColumn":35},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"124","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":14},{"ruleId":"119","severity":1,"message":"125","line":16,"column":10,"nodeType":"121","messageId":"122","endLine":16,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":2,"column":30,"nodeType":"121","messageId":"122","endLine":2,"endColumn":35},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"124","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":14},{"ruleId":"119","severity":1,"message":"125","line":16,"column":10,"nodeType":"121","messageId":"122","endLine":16,"endColumn":22},{"ruleId":"119","severity":1,"message":"126","line":2,"column":9,"nodeType":"121","messageId":"122","endLine":2,"endColumn":18},{"ruleId":"119","severity":1,"message":"127","line":2,"column":20,"nodeType":"121","messageId":"122","endLine":2,"endColumn":28},{"ruleId":"119","severity":1,"message":"128","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":30},{"ruleId":"119","severity":1,"message":"129","line":3,"column":25,"nodeType":"121","messageId":"122","endLine":3,"endColumn":29},{"ruleId":"119","severity":1,"message":"130","line":3,"column":77,"nodeType":"121","messageId":"122","endLine":3,"endColumn":96},{"ruleId":"119","severity":1,"message":"127","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":24},{"ruleId":"119","severity":1,"message":"126","line":1,"column":25,"nodeType":"121","messageId":"122","endLine":1,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":22,"column":49,"nodeType":"133","messageId":"134","endLine":22,"endColumn":51},{"ruleId":"119","severity":1,"message":"127","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":24},{"ruleId":"119","severity":1,"message":"126","line":1,"column":25,"nodeType":"121","messageId":"122","endLine":1,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":22,"column":49,"nodeType":"133","messageId":"134","endLine":22,"endColumn":51},{"ruleId":"119","severity":1,"message":"127","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":24},{"ruleId":"119","severity":1,"message":"126","line":1,"column":25,"nodeType":"121","messageId":"122","endLine":1,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":22,"column":49,"nodeType":"133","messageId":"134","endLine":22,"endColumn":51},{"ruleId":"119","severity":1,"message":"127","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":24},{"ruleId":"119","severity":1,"message":"126","line":1,"column":25,"nodeType":"121","messageId":"122","endLine":1,"endColumn":34},{"ruleId":"119","severity":1,"message":"135","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":22,"column":49,"nodeType":"133","messageId":"134","endLine":22,"endColumn":51},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","'mapboxgl' is defined but never used.","'Link' is defined but never used.","'selectedCity' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'PureComponent' is defined but never used.","'Cell' is defined but never used.","'ResponsiveContainer' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ProgressBar' is defined but never used.","no-global-assign","no-unsafe-negation"]